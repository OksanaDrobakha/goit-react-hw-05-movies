{"version":3,"file":"static/js/842.03c0155b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n  color: white;\n`;\n","import { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <span>...LOADING</span>\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0daaa2;\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0daaa2;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #0c827c;\n    border-bottom: 2px solid #0c827c;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n      <List>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #abf4e5;\n  border: 1px solid #0daaa2;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0daaa2;\n    color: #ffffff;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { FormSearch, Input, Button } from './Form.styled';\n\nconst Form = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const search = event.target.search.value.trim().toLowerCase();\n    if (!search) return;\n    setSearchParams({ query: search });\n  };\n\n  const search = searchParams.get('query') ?? '';\n\n  return (\n    <FormSearch onSubmit={handleSubmit}>\n      <label>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search movies\"\n          defaultValue={search}\n        />\n      </label>\n      <Button type=\"submit\">Search</Button>\n    </FormSearch>\n  );\n};\n\nexport default Form;\n","import Form from 'components/Form/Form';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByName } from 'services/api';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!search) return;\n    const fetch = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMoviesByName(search);\n        setMovies(data.results);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetch();\n  }, [search]);\n\n  return (\n    <>\n      <section>\n        <div>\n          <h1>Search Movies</h1>\n          <Form />\n          {isLoading && <Loader />}\n          <MoviesList movies={movies} />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '09d7a3eefc954f8342048cf5b31d1e79';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst NO_POSTER =\n  'https://fakeimg.pl/400x600/6693ba/ffffff?text=No+Poster&font=lobster';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get('/trending/movie/day', { params });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: name,\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}`, { params });\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/credits`, { params });\n  return response.data.cast\n    .map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        poster: getPoster(actor.profile_path),\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const fetchReviews = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n  return response.data.results\n    .map(item => {\n      return {\n        id: item.id,\n        name: item.author,\n        content: item.content,\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const getPoster = url => (url ? BASE_POSTER_URL + url : NO_POSTER);\n"],"names":["LoaderBox","styled","StyledSection","SectionTitle","List","ListItem","StyledLink","Link","movies","location","useLocation","map","movie","to","id","state","from","title","FormSearch","Input","Button","useSearchParams","searchParams","setSearchParams","search","get","onSubmit","event","preventDefault","target","value","trim","toLowerCase","query","type","name","placeholder","defaultValue","useState","setMovies","isLoading","setIsLoading","useEffect","fetch","fetchMoviesByName","data","results","Loader","MoviesList","API_KEY","axios","fetchTrending","params","api_key","language","response","include_adult","fetchMovieDetails","fetchActors","cast","actor","poster","getPoster","profile_path","slice","fetchReviews","item","author","content","url"],"sourceRoot":""}