{"version":3,"file":"static/js/387.5e92cab4.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n  color: white;\n`;\n","import { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <span>...LOADING</span>\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 40px;\n  padding-left: 40px;\n  padding-bottom: 40px;\n`;\n\nexport const ReviewHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid #d3d3d3;\n  list-style-type: none;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.3;\n`;\n\nexport const NoReviewsText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\nimport {\n  Author,\n  NoReviewsText,\n  Review,\n  ReviewHeader,\n  ReviewList,\n  ReviewListItem,\n  Wrapper,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetch = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchReviews(movieId);\n\n        setReviews(data);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n  return (\n    <Wrapper>\n      <ReviewHeader>Reviews</ReviewHeader>\n      {isLoading && <Loader />}\n      {reviews.length ? (\n        <ReviewList>\n          {reviews.map(({ id, name, content }) => (\n            <ReviewListItem key={id}>\n              <Author>{name}</Author>\n              <Review>{content}</Review>\n            </ReviewListItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoReviewsText>\n          We don't have any reviews for this movie yet.\n        </NoReviewsText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '09d7a3eefc954f8342048cf5b31d1e79';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst NO_POSTER =\n  'https://fakeimg.pl/400x600/6693ba/ffffff?text=No+Poster&font=lobster';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get('/trending/movie/day', { params });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: name,\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}`, { params });\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/credits`, { params });\n  return response.data.cast\n    .map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        poster: getPoster(actor.profile_path),\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const fetchReviews = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n  return response.data.results\n    .map(item => {\n      return {\n        id: item.id,\n        name: item.author,\n        content: item.content,\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const getPoster = url => (url ? BASE_POSTER_URL + url : NO_POSTER);\n"],"names":["LoaderBox","styled","Wrapper","ReviewHeader","ReviewList","ReviewListItem","Author","Review","NoReviewsText","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetch","fetchReviews","data","Loader","length","map","id","name","content","API_KEY","axios","fetchTrending","params","api_key","language","response","fetchMoviesByName","include_adult","query","fetchMovieDetails","fetchActors","cast","actor","poster","getPoster","profile_path","slice","results","item","author","url"],"sourceRoot":""}