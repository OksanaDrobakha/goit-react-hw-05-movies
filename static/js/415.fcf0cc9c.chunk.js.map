{"version":3,"file":"static/js/415.fcf0cc9c.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n  color: white;\n`;\n","import { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <span>...LOADING</span>\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0daaa2;\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0daaa2;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #0c827c;\n    border-bottom: 2px solid #0c827c;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n      <List>\n        {movies.map(movie => (\n          <ListItem key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MoviesList;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\n\nimport { fetchTrending } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrending();\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <section>\n        <div>\n          <h1>Trending Movies</h1>\n          {isLoading && <Loader />}\n          <MoviesList movies={movies} />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '09d7a3eefc954f8342048cf5b31d1e79';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst NO_POSTER =\n  'https://fakeimg.pl/400x600/6693ba/ffffff?text=No+Poster&font=lobster';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get('/trending/movie/day', { params });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: name,\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}`, { params });\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/credits`, { params });\n  return response.data.cast\n    .map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        poster: getPoster(actor.profile_path),\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const fetchReviews = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n  return response.data.results\n    .map(item => {\n      return {\n        id: item.id,\n        name: item.author,\n        content: item.content,\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const getPoster = url => (url ? BASE_POSTER_URL + url : NO_POSTER);\n"],"names":["LoaderBox","styled","StyledSection","SectionTitle","List","ListItem","StyledLink","Link","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setIsLoading","useEffect","fetch","fetchTrending","data","results","console","log","API_KEY","axios","params","api_key","language","response","fetchMoviesByName","name","include_adult","query","fetchMovieDetails","fetchActors","cast","actor","poster","getPoster","profile_path","slice","fetchReviews","item","author","content","url"],"sourceRoot":""}