{"version":3,"file":"static/js/736.631b7229.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 80px;\n  padding-left: 80px;\n  padding-bottom: 40px;\n`;\n\nexport const CastHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n  list-style-type: none;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 4 * 40px) / 2);\n  height: auto;\n  word-wrap: break-word;\n`;\n\nexport const CastInfo = styled.div`\n  margin-top: 20px;\n  max-width: 220px;\n`;\n\nexport const CastName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActors } from 'services/api';\nimport {\n  CastHeader,\n  CastInfo,\n  CastList,\n  CastListItem,\n  CastName,\n  NoCastText,\n  Wrapper,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetch = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchActors(movieId);\n\n        setActors(data);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetch();\n  }, [movieId]);\n  return (\n    <Wrapper>\n      <CastHeader>Cast</CastHeader>\n      {isLoading && <Loader />}\n      {actors.length ? (\n        <CastList>\n          {actors.map(({ id, name, poster }) => (\n            <CastListItem key={id}>\n              <CastInfo>\n                <CastName>{name}</CastName>\n                <img src={poster} alt={name} />\n              </CastInfo>\n            </CastListItem>\n          ))}\n        </CastList>\n      ) : (\n        <NoCastText>\n          We don't have any information about the cast yet.\n        </NoCastText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n  color: white;\n`;\n","import { LoaderBox } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderBox>\n      <span>...LOADING</span>\n    </LoaderBox>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '09d7a3eefc954f8342048cf5b31d1e79';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst NO_POSTER =\n  'https://fakeimg.pl/400x600/6693ba/ffffff?text=No+Poster&font=lobster';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get('/trending/movie/day', { params });\n  return response.data;\n};\n\nexport const fetchMoviesByName = async name => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: name,\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}`, { params });\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/credits`, { params });\n  return response.data.cast\n    .map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        poster: getPoster(actor.profile_path),\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const fetchReviews = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${id}/reviews`, { params });\n  return response.data.results\n    .map(item => {\n      return {\n        id: item.id,\n        name: item.author,\n        content: item.content,\n      };\n    })\n    .slice(0, 10);\n};\n\nexport const getPoster = url => (url ? BASE_POSTER_URL + url : NO_POSTER);\n"],"names":["Wrapper","styled","CastHeader","CastList","CastListItem","CastInfo","CastName","NoCastText","movieId","useParams","useState","actors","setActors","isLoading","setIsLoading","useEffect","fetch","fetchActors","data","Loader","length","map","id","name","poster","src","alt","LoaderBox","API_KEY","axios","fetchTrending","params","api_key","language","response","fetchMoviesByName","include_adult","query","fetchMovieDetails","cast","actor","getPoster","profile_path","slice","fetchReviews","results","item","author","content","url"],"sourceRoot":""}